RoomType:
    columns:
        name: { type: string(30), notnull: true }
        code: { type: string(1), notnull: true }

Room:
    columns:
        name: { type: string(30), notnull: true }
        room_type_id: { type: integer, notnull: true }
        capacity: {type: integer, notnull: true }
    relations:
        RoomType: { local: room_type_id, foreign: id }
    indexes:
        external_id_index:
          fields:
            name
          type:
            unique

LessonType:
    columns:
        name: { type: string(30), notnull: true }
        code: { type: string(1), notnull: true }

Teacher:
    columns:
        given_name: { type: string(50) }
        family_name: { type: string(50), notnull: true }
        iniciala: { type: string(50) }
        oddelenie: { type: string(50) }
        katedra: { type: string(50) }
        external_id: { type: string(30) }

StudentGroup:
    columns:
        name: { type: string(30), notnull: true }        
    relations:
        Lessons:
            class: Lesson
            local: student_group_id
            foreign: lesson_id
            refClass: StudentGroupLessons

Lesson:
    columns:
        day: { type: integer, notnull: true }
        start: { type: integer, notnull: true }
        end: { type: integer, notnull: true }
        lesson_type_id: { type: integer, notnull: true }
        room_id: { type: integer, notnull: true }
        subject_id: { type: integer, notnull: true }
        external_id: { type: integer }
    relations:
        LessonType: { local: lesson_type_id, foreign: id }
        Room: { local: room_id, foreign: id }
        Subject: { onDelete: CASCADE, local: subject_id, foreign: id, foreignAlias: Lessons }
        StudentGroup: { local: lesson_id, foreign: student_group_id, refClass: StudentGroupLessons }
        Teacher: { local: lesson_id, foreign: teacher_id, refClass: TeacherLessons }
        Linked:
            class: Lesson
            local: lesson1_id
            foreign: lesson2_id
            refClass: LinkedLessons
            equal: true
    indexes:
        external_id_index:
          fields:
            external_id
          type:
            unique

StudentGroupLessons:
    columns:
        student_group_id: { type: integer, primary: true }
        lesson_id: { type: integer, primary: true }
    relations:
        StudentGroup: { onDelete: CASCADE, local: student_group_id, foreign: id }
        Lesson: { onDelete: CASCADE, local: lesson_id, foreign: id }

TeacherLessons:
    columns:
        teacher_id: { type: integer, notnull: true }
        lesson_id: { type: integer, notnull: true }
    relations:
        Teacher: { onDelete: CASCADE, local: teacher_id, foreign: id }
        Lesson: { onDelete: CASCADE, local: lesson_id, foreign: id }

LinkedLessons:
    columns:
        lesson1_id: { type: integer, primary: true }
        lesson2_id: { type: integer, primary: true }

Subject:
    columns:
        name: { type: string(100), notnull: true }
        code: { type: string(50), notnull: true }
        short_code: { type: string(20), notnull: true }
        credit_value: { type: integer, notnull: true }
        rozsah: { type: string(30), notnull: true }
        external_id: { type: string(30) }
    indexes:
        external_id_index:
          fields:
            external_id
          type:
            unique

UserTimetable:
    columns:
        name: { type: string(50), notnull: true }
        published: { type: boolean, notnull: true }
        slug: { type: string(30) }
        user_id : { type: integer(4), notnull: true }
    relations:
        sfGuardUser: { onDelete: CASCADE, local: user_id, foreign: id }
    indexes:
        slug_unique_index:
          fields: [slug]
          type: unique

UserTimetableLessons:
    columns:
        user_timetable_id: { type: integer, notnull: true }
        lesson_id: { type: integer, notnull: true }
        highlighted: { type: boolean, notnull: true }
    relations:
        UserTimetable: { onDelete: CASCADE, local: user_timetable_id, foreign: id }
        Lesson: { onDelete: CASCADE, local: lesson_id, foreign: id }