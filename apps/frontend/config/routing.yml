# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: timetable, action: homepage }

sf_guard_signin:
    url: /login
    param: { module: sfGuardAuth, action: signin }

sf_guard_signout:
    url: /logout
    param: { module: sfGuardAuth, action: signout }

register:
    url: /register
    class: sfRequestRoute
    param: { module: user, action: register }
    requirements: {sf_method: get}

register_post:
    url: /register
    class: sfRequestRoute
    param: { module: user, action: registerDo }
    requirements: {sf_method: post}


# zobrazenie vsetkych hodin
lesson_list_all:
    url: /lesson/list
    param: { module: lesson, action: index }

lesson_search_all:
    url: /lesson/search
    param: { module: lesson, action: query }

timetable_show:
    url: /timetable/:id.:sf_format
    param: { module: timetable, action: show, sf_format: html }
    requirements:
        id: \d+
        sf_format: (?:html|txt|csv|ics|xml)

timetable_show_published:
    url: /timetable/published/:slug.:sf_format
    class: sfDoctrineRoute
    options: { model: UserTimetable, type: object }
    param: { module: timetable, action: showPublished, sf_format: html }
    requirements:
        #slug: \[a-z-\]+
        sf_format: (?:html|txt|csv|ics|xml)

timetable_new:
    url: /timetable/new
    param: { module: timetable, action: new }

timetable_create:
    url: /timetable
    param: { module: timetable, action: create }
    requirements:
        sf_method: post

timetable_change_lessons:
    url: /timetable/:id/change_lessons
    param: { module: timetable, action: changeLessons }
    requirements:
        sf_method: post

timetable_duplicate:
    url: /timetable/:id/duplicate
    param: { module: timetable, action: duplicate }
    requirements:
        sf_method: post

timetable_duplicate_published:
    url: /timetable/published/:slug.:sf_format/duplicate
    class: sfDoctrineRoute
    options: { model: UserTimetable, type: object }
    param: { module: timetable, action: duplicatePublished, sf_format: html }
    requirements:
        #slug: \[a-z-\]+
        sf_format: (?:html|txt|csv|ics|xml)

timetable_save:
    url: /timetable/:id/save
    param: { module: timetable, action: save }

timetable_delete:
    url: /timetable/:id/delete
    param: { module: timetable, action: delete }

timetable_import:
    class: sfRequestRoute
    url: /timetable/:id/import
    param: { module: timetable, action: import }
    requirements: { sf_method: get }

timetable_importDo:
    class: sfRequestRoute
    url: /timetable/:id/import
    param: { module: timetable, action: importDo }
    requirements: { sf_method: post }

timetable_export:
    url: /timetable/:id/export
    param: { module: timetable, action: export }

timetable_export_published:
    url: /timetable/published/:slug.:sf_format/export
    class: sfDoctrineRoute
    options: { model: UserTimetable, type: object }
    param: { module: timetable, action: exportPublished, sf_format: html }
    requirements:
        #slug: \[a-z-\]+
        sf_format: (?:html|txt|csv|ics|xml)

timetable_publish_do:
    class: sfRequestRoute
    url: /timetable/:id/publish
    param: { module: timetable, action: publishExecute }
    requirements: { sf_method: post }


timetable_publish:
    class: sfRequestRoute
    url: /timetable/:id/publish
    param: { module: timetable, action: publish }
    requirements: { sf_method: get }

timetable_unpublish:
    class: sfRequestRoute
    url: /timetable/:id/unpublish
    param: { module: timetable, action: unpublish }
